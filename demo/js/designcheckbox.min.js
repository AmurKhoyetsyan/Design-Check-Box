/**
 * create by Amur
 * DesignCheckBox
 * https://github.com/AmurKhoyetsyan/Design-Check-Box
 */

const setStyleArmCheckBox=()=>{let e=document.createElement("style");e.setAttribute("type","text/css");let t=document.querySelectorAll("head")[0]||document.head;e.innerText=".arm-checkbox{display:none}.arm-checkbox-parent,.arm-checkbox-parent>.arm-checkbox-cubic-parent{display:-webkit-box;display:-ms-flexbox;display:flex}.arm-checkbox-parent{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.arm-checkbox-parent>.arm-checkbox-cubic-parent>.arm-checkbox-cubic,.arm-checkbox-parent>.arm-checkbox-title-parent>.arm-checkbox-title{cursor:pointer;margin-bottom:0}.arm-checkbox-parent>.arm-checkbox-title-parent>.arm-checkbox-title{padding:0 5px;font-size:14px;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.arm-checkbox-parent>.arm-checkbox-cubic-parent>.arm-checkbox-cubic{border-style:solid;border-width:1px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;width:17px;height:17px;position:relative}.arm-checkbox-parent>.arm-checkbox-cubic-parent{-webkit-align-items:center;align-items:center}.arm-checkbox:checked~.arm-checkbox-parent>.arm-checkbox-cubic-parent>.arm-checkbox-cubic::before{content:'';width:6px;height:11px;left:4.4px;top:1px;border-style:solid;border-width:0 3px 3px 0;position:absolute;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}.arm-checkbox-parent,.arm-checkbox-parent>.arm-checkbox-cubic-parent,.arm-checkbox-parent>.arm-checkbox-cubic-parent>.arm-checkbox-cubic,.arm-checkbox-parent>.arm-checkbox-title-parent>.arm-checkbox-title,.arm-checkbox:checked~.arm-checkbox-parent>.arm-checkbox-cubic-parent>.arm-checkbox-cubic::before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}",t.appendChild(e)};setStyleArmCheckBox();class OtherFunctionsCheckBox{static replaceAll(e,t,c){return e.split(t).join(c)}static expendOption(e,t){for(let c in e)t.hasOwnProperty(c)&&(e[c]=t[c])}static setDesignCheckBox(e,t){let c=document.createElement("style");return c.setAttribute("type","text/css"),c.innerText=`.${e}{background-color: ${t.checkBackground};}.${e}{border-color: ${t.boxBorderColor};},.${e}::before{border-color: ${t.checkMarkColor};}`,c}}class DesignCheckBox extends OtherFunctionsCheckBox{constructor(e){super(),this.elem=e,this.defaultOption={checkboxPosition:"left",checkMarkColor:"#A4A4A4",boxBorderColor:"#A4A4A4",checkBackground:"#FFFFFF",label:!0,labelColor:"#A4A4A4"}}static createCheckBox(e,t){let c=`${e}_cub_style`,r=this.setDesignCheckBox(c,t),o=document.createElement("div");o.classList.add("arm-checkbox-cubic-parent");let a=document.createElement("label");return a.setAttribute("for",e),a.classList.add("arm-checkbox-cubic"),a.classList.add(c),o.appendChild(r),o.appendChild(a),o}static createTitle(e,t,c){let r=document.createElement("label"),o=document.createTextNode(e.getAttribute("data-label")?e.getAttribute("data-label"):""),a=document.createElement("div");return a.classList.add("arm-checkbox-title-parent"),r.setAttribute("for",t),r.appendChild(o),r.style.color=c.labelColor,r.classList.add("arm-checkbox-title"),a.appendChild(r),a}static chreateArmCheckBoxParent(e,t,c){let r=this.createCheckBox(t,c),o=c.label?this.createTitle(e,t,c):"",a=document.createElement("div");return a.classList.add("arm-checkbox-parent"),"right"===c.checkboxPosition&&(c.label&&a.append(o),a.append(r)),"left"===c.checkboxPosition&&(a.append(r),c.label&&a.append(o)),a}static newDesign(e,t,c){let r=`id_${this.replaceAll(e.classList.value," ","")}_${t}_${Math.floor(1e6*Math.random())}`;e.hasAttribute("id")?(e.removeAttribute("id"),e.setAttribute("id",r)):e.setAttribute("id",r),e.classList.add("arm-checkbox");let o=document.createElement("div");o.classList.add("arm-checkbox-parent-component");let a=this.chreateArmCheckBoxParent(e,r,c),i=e.parentNode;o.appendChild(e),o.appendChild(a),i.appendChild(o)}design(e={}){if(this.constructor.expendOption(this.defaultOption,e),this.elem){let e=this.elem.length;for(let t=0;t<e;t++)"checkbox"===this.elem[t].getAttribute("type")&&this.constructor.newDesign(this.elem[t],t,this.defaultOption)}}}
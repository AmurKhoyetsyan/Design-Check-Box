/**
 * create by Amur
 * DesignCheckBox
 * https://github.com/AmurKhoyetsyan/Design-Check-Box
 */

class OtherFunctionsCheckBox{static replaceAll(e,t,c){return e.split(t).join(c)}static expendOption(e,t){for(let c in e)t.hasOwnProperty(c)&&(e[c]=t[c])}}class DesignCheckBox extends OtherFunctionsCheckBox{constructor(e){super(),this.elem=e,this.defaultOption={checkboxPosition:"left",checkMarkColor:"#A4A4A4",boxBorderColor:"#A4A4A4",checkBackground:"#FFFFFF",label:!0,labelColor:"#A4A4A4"}}static createCheckBox(e,t){let c=document.createElement("div");c.classList.add("arm-checkbox-cubic-parent");let a=document.createElement("label");a.setAttribute("for",e),a.classList.add("arm-checkbox-cubic");let l=document.createElement("div");return l.classList.add("arm-check-box-mark"),a.style.backgroundColor=t.checkBackground,a.style.borderColor=t.boxBorderColor,l.style.borderColor=t.checkMarkColor,a.appendChild(l),c.appendChild(a),c}static createTitle(e,t,c){let a=document.createElement("label"),l=document.createTextNode(e.getAttribute("data-label")?e.getAttribute("data-label"):""),r=document.createElement("div");return r.classList.add("arm-checkbox-title-parent"),a.setAttribute("for",t),a.appendChild(l),a.style.color=c.labelColor,a.classList.add("arm-checkbox-title"),r.appendChild(a),r}static chreateArmCheckBoxParent(e,t,c){let a=this.createCheckBox(t,c),l=c.label?this.createTitle(e,t,c):"",r=document.createElement("div");return r.classList.add("arm-checkbox-parent"),"right"===c.checkboxPosition&&(c.label&&r.append(l),r.append(a)),"left"===c.checkboxPosition&&(r.append(a),c.label&&r.append(l)),r}static newDesign(e,t,c){let a=`id_${this.replaceAll(e.classList.value," ","")}_${t}_${Math.floor(1e6*Math.random())}`;e.hasAttribute("id")?(e.removeAttribute("id"),e.setAttribute("id",a)):e.setAttribute("id",a),e.classList.add("arm-checkbox");let l=document.createElement("div");l.classList.add("arm-checkbox-parent-component");let r=this.chreateArmCheckBoxParent(e,a,c),o=e.parentNode;l.appendChild(e),l.appendChild(r),o.appendChild(l)}design(e={}){if(this.constructor.expendOption(this.defaultOption,e),this.elem){let e=this.elem.length;for(let t=0;t<e;t++)"checkbox"===this.elem[t].getAttribute("type")&&this.constructor.newDesign(this.elem[t],t,this.defaultOption)}}}